# Generated by Django 5.2.4 on 2025-10-04 10:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImpactFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('factor_type', models.CharField(choices=[('emission_source', 'Emission Source'), ('weather_pattern', 'Weather Pattern'), ('transportation', 'Transportation'), ('industrial', 'Industrial Activity'), ('natural', 'Natural Event'), ('policy', 'Policy Intervention')], max_length=20)),
                ('pm25_coefficient', models.FloatField(default=1.0)),
                ('pm10_coefficient', models.FloatField(default=1.0)),
                ('no2_coefficient', models.FloatField(default=1.0)),
                ('so2_coefficient', models.FloatField(default=1.0)),
                ('co_coefficient', models.FloatField(default=1.0)),
                ('o3_coefficient', models.FloatField(default=1.0)),
                ('applicable_regions', models.JSONField(blank=True, default=list)),
                ('seasonal_factor', models.FloatField(default=1.0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('scenario_type', models.CharField(choices=[('wildfire', 'Wildfire Impact'), ('traffic', 'Traffic Reduction'), ('industrial', 'Industrial Changes'), ('weather', 'Weather Pattern Changes'), ('policy', 'Policy Implementation'), ('seasonal', 'Seasonal Variations'), ('custom', 'Custom Scenario')], max_length=20)),
                ('default_parameters', models.JSONField(default=dict)),
                ('complexity_level', models.CharField(choices=[('basic', 'Basic'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='basic', max_length=12)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SimulationScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('parameters', models.JSONField(default=dict)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('time_resolution', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='hourly', max_length=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='draft', max_length=20)),
                ('progress_percent', models.IntegerField(default=0)),
                ('results', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scenario_simulator.scenariotemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScenarioComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('comparison_results', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('scenarios', models.ManyToManyField(to='scenario_simulator.simulationscenario')),
            ],
        ),
        migrations.CreateModel(
            name='SimulationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('pm25_concentration', models.FloatField(blank=True, null=True)),
                ('pm10_concentration', models.FloatField(blank=True, null=True)),
                ('no2_concentration', models.FloatField(blank=True, null=True)),
                ('so2_concentration', models.FloatField(blank=True, null=True)),
                ('co_concentration', models.FloatField(blank=True, null=True)),
                ('o3_concentration', models.FloatField(blank=True, null=True)),
                ('aqi_value', models.IntegerField()),
                ('visibility_km', models.FloatField(blank=True, null=True)),
                ('health_risk_index', models.FloatField(blank=True, null=True)),
                ('baseline_aqi', models.IntegerField(blank=True, null=True)),
                ('improvement_percent', models.FloatField(blank=True, null=True)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_points', to='scenario_simulator.simulationscenario')),
            ],
            options={
                'ordering': ['timestamp'],
                'indexes': [models.Index(fields=['scenario', 'timestamp'], name='scenario_si_scenari_4456ab_idx')],
            },
        ),
    ]
