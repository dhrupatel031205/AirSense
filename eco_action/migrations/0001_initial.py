# Generated by Django 5.2.4 on 2025-10-04 10:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PolicyCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Policy Categories',
            },
        ),
        migrations.CreateModel(
            name='CommunityAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('action_type', models.CharField(choices=[('cleanup', 'Environmental Cleanup'), ('tree_planting', 'Tree Planting'), ('awareness', 'Awareness Campaign'), ('monitoring', 'Air Quality Monitoring'), ('advocacy', 'Policy Advocacy'), ('education', 'Environmental Education')], max_length=20)),
                ('location', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('max_participants', models.PositiveIntegerField(default=50)),
                ('registration_required', models.BooleanField(default=False)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('website_url', models.URLField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='community_actions/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_actions', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(blank=True, related_name='joined_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='EcoTip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('category', models.CharField(choices=[('transport', 'Transportation'), ('energy', 'Energy Conservation'), ('waste', 'Waste Reduction'), ('indoor', 'Indoor Air Quality'), ('outdoor', 'Outdoor Activities'), ('health', 'Health Protection')], max_length=20)),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='easy', max_length=10)),
                ('estimated_impact', models.CharField(blank=True, max_length=200)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_tips', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnvironmentalPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('policy_type', models.CharField(choices=[('local', 'Local Policy'), ('regional', 'Regional Policy'), ('national', 'National Policy'), ('international', 'International Policy'), ('recommendation', 'Recommendation')], max_length=20)),
                ('impact_level', models.CharField(choices=[('low', 'Low Impact'), ('medium', 'Medium Impact'), ('high', 'High Impact'), ('critical', 'Critical Impact')], max_length=10)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('source_url', models.URLField(blank=True)),
                ('implementation_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eco_action.policycategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserEcoProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actions_participated', models.PositiveIntegerField(default=0)),
                ('actions_organized', models.PositiveIntegerField(default=0)),
                ('carbon_footprint_goal', models.FloatField(default=0.0)),
                ('notification_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('never', 'Never')], default='weekly', max_length=20)),
                ('is_public_profile', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_categories', models.ManyToManyField(blank=True, to='eco_action.policycategory')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PolicyFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('support', 'Support'), ('oppose', 'Oppose'), ('neutral', 'Neutral'), ('suggestion', 'Suggestion')], max_length=20)),
                ('comment', models.TextField(blank=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eco_action.environmentalpolicy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'policy')},
            },
        ),
    ]
